package pt.tecnico.mydrive.domain;

class MyDriveManager{
	Integer counter;
}

class Session{
	long token;
	DateTime dateOfLastAccess;
}

class User{
	String username;
	String password;
	String name;
	String mask;
}

class Variable {
	String name;
	String value;
}

class SuperUser extends User;

class GuestUser extends User;

class File{
	Integer id;
	String name;
	String permissions;
	DateTime lastModifiedDate;
	String extension;
}

class Directory extends File;

class PlainFile extends File{
	String content;
}

class Association {
	String extension;
}


class Link extends PlainFile ;

class Application extends PlainFile ;



relation MyDriveManagerExists{
	.pt.ist.fenixframework.DomainRoot playsRole root {multiplicity 1; }
	MyDriveManager playsRole myDriveManager {multiplicity 1; }
}

relation MyDriveManagerContainsUsers{
	MyDriveManager playsRole myDriveManager { multiplicity 1; }
	User playsRole user { multiplicity 1..*; }
}

relation MyDriveManagerHasBaseDirectory {
	MyDriveManager playsRole myDriveManager { multiplicity 1; }
	Directory playsRole baseDirectory { multiplicity 1;}
}

relation UserHasHomeDirectory {
	User playsRole user { multiplicity 1; }
	Directory playsRole homeDirectory { multiplicity 1; }
}

relation FileOwnership {
//	File playsRole file { multiplicity 1..*; }
	File playsRole file { multiplicity *; }
	User playsRole owner { multiplicity 1; }
}

relation DirectoryContainsFiles {
	Directory playsRole parentDirectory { multiplicity 1; }
//	File playsRole file { multiplicity 2..*; }
	File playsRole file { multiplicity *; }
}

relation MyDriveManagerHasSessions {
	MyDriveManager playsRole myDriveManager { multiplicity 1; }
	Session playsRole session { multiplicity *; }
}

relation SessionHasUser {
	Session playsRole session { multiplicity *; }
	User playsRole user { multiplicity 1; }
}

relation SessionHasCurrentDirectory {
	Session playsRole session {multiplicity *;}
	Directory playsRole currentDirectory {multiplicity 1;}
}

relation SessionHasEnvironmentVariables {
	Session playsRole session { multiplicity 1; }
	Variable playsRole variable { multiplicity *; }
}

relation AssociationHasAssociatedFile {
	Association playsRole association { multiplicity *;}
	Application playsRole application { multiplicity 1;}
}

relation UserHasFileAssociations {
	User playsRole user { multiplicity 1;}
	Association playsRole association { multiplicity *;}
}

